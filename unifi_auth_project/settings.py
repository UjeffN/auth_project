"""
Django settings for unifi_auth_project project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Carrega variáveis de ambiente do arquivo .env

load_dotenv('/opt/auth_project/.env')


# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'sua-chave-secreta-aqui')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Temporariamente True para servir arquivos estáticos

ALLOWED_HOSTS = ['192.168.48.2', '192.168.48.3', 'localhost', '127.0.0.1', 'portal.parauapebas.pa.leg.br', '.parauapebas.pa.leg.br', 'https://192.168.48.2:8447', '192.168.48.100', '164.163.222.7', 'auth.parauapebas.pa.leg.br']  # O ponto no início permite todos os subdomínios
#
# Configurações de Segurança para HTTPS
# Informa ao Django que ele está atrás de um proxy seguro (HTTPS)
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# Define que os cookies de sessão e CSRF só devem ser enviados via HTTPS
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Configurações de arquivos estáticos
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Diretórios adicionais de arquivos estáticos
STATICFILES_DIRS = [
    BASE_DIR / 'static',  # Diretório global para arquivos estáticos compartilhados
]

# Configuração para servir arquivos estáticos em produção
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# Configurações de segurança para arquivos estáticos
SECURE_CROSS_ORIGIN_OPENER_POLICY = None  # Desativa COOP para desenvolvimento
X_FRAME_OPTIONS = 'SAMEORIGIN'
CSP_INCLUDE_NONCE_IN = ['script-src']
CSP_DEFAULT_SRC = ["'self'"]

# Configurações de manipulação de erros personalizados
CSRF_FAILURE_VIEW = 'unifi_auth_app.views.csrf_failure'
handler400 = 'unifi_auth_app.views.bad_request'
handler403 = 'unifi_auth_app.views.permission_denied'
handler403_csrf = 'unifi_auth_app.views.csrf_failure'
handler404 = 'unifi_auth_app.views.page_not_found'
handler500 = 'unifi_auth_app.views.server_error'

# Configurações de CORS
CORS_ALLOW_ALL_ORIGINS = True  # Em produção, restrinja para os domínios específicos
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'x-forwarded-for',
    'x-real-ip',
    'x-original-ip'
]
CORS_PREFLIGHT_MAX_AGE = 86400  # 24 horas

# Configurações do UniFi Controller
UNIFI_CONTROLLER_CONFIG = {
    'IP': os.getenv('UNIFI_CONTROLLER_IP', '192.168.1.1'),
    'PORT': os.getenv('UNIFI_CONTROLLER_PORT', '8443'),
    'SITE_ID': os.getenv('UNIFI_SITE_ID', 'default'),
    'USERNAME': os.getenv('UNIFI_USERNAME', 'admin'),
    'PASSWORD': os.getenv('UNIFI_PASSWORD', ''),
}

# Configurações do Portal de Visitantes
PORTAL_CONFIG = {
    'AUTH_DURATION_MINUTES': 1440,  # 24 horas
    'REQUIRE_EMAIL_CONFIRMATION': False,
    'ALLOWED_DOMAINS': ['parauapebas.pa.leg.br'],  # Domínios permitidos para e-mail
}


# Finders de arquivos estáticos
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Configurações do Admin
ADMIN_SITE_HEADER = 'Administração do UniFi Auth'
ADMIN_SITE_TITLE = 'UniFi Auth'
ADMIN_INDEX_TITLE = 'Bem-vindo ao UniFi Auth'

# Configurações de Login
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

# Configurações de Manifesto Estático
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'



# Application definition

INSTALLED_APPS = [
    'django_prometheus',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',  # Para lidar com CORS
    'unifi_auth_app',
]

# Configuração de segurança para iframes
X_FRAME_OPTIONS = 'SAMEORIGIN'

MIDDLEWARE = [
    'django_prometheus.middleware.PrometheusBeforeMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Deve vir antes de CommonMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'unifi_auth_app.security_headers.SecurityHeadersMiddleware',  # Middleware para cabeçalhos de segurança
    'unifi_auth_app.request_timing.RequestTimingMiddleware',     # Middleware para medição de tempo
    'unifi_auth_app.middleware.ErrorHandlingMiddleware',         # Middleware para tratamento de erros
    'unifi_auth_app.audit_logger.APIAuditMiddleware',             # Middleware para auditoria de APIs
    'unifi_auth_app.middleware.PortalMiddleware',                 # Middleware para controle de acesso
    'django_prometheus.middleware.PrometheusAfterMiddleware',
]

# Configurações de desempenho
SLOW_REQUEST_THRESHOLD = 1.0  # segundos
SHOW_REQUEST_TIME_HEADER = DEBUG  # Mostrar cabeçalho X-Request-Time apenas em DEBUG

# Configurações de CSP (Content Security Policy)
CSP_DIRECTIVES = {
    'default-src': ["'self'"],
    'script-src': [
        "'self'", 
        "'unsafe-inline'",  # Necessário para alguns componentes do Bootstrap/AdminLTE
        "'unsafe-eval'"     # Necessário para alguns componentes do Django
    ],
    'style-src': [
        "'self'", 
        "'unsafe-inline'"  # Necessário para estilos inline
    ],
    'img-src': ["'self'", 'data:', 'https:'],
    'font-src': ["'self'", 'data:'],
    'connect-src': ["'self'"],
    'frame-ancestors': ["'self'"],
    'form-action': ["'self'"],
    'base-uri': ["'self'"],
    'object-src': ["'none'"],
}

ROOT_URLCONF = 'unifi_auth_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{levelname}] {asctime} {module} {message}',
            'style': '{'
        },
        'audit': {
            'format': '%(asctime)s [%(levelname)s] %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'json': {
            '()': 'pythonjsonlogger.jsonlogger.JsonFormatter',
            'format': '''
                %(asctime)s %(levelname)s %(name)s %(message)s
                [in %(pathname)s:%(lineno)d]"
            ''',
            'datefmt': '%Y-%m-%dT%H:%M:%S%z',
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'filters': ['require_debug_false'],
            'include_html': True,
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/opt/auth_project/logs/django.log',
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
            'formatter': 'verbose',
        },
        'audit_file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/opt/auth_project/logs/audit.log',
            'maxBytes': 1024 * 1024 * 10,  # 10 MB
            'backupCount': 10,
            'formatter': 'json',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file', 'mail_admins'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.request': {
            'handlers': ['mail_admins', 'file'],
            'level': 'ERROR',
            'propagate': False,
        },
        'unifi_auth_app': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'audit': {
            'handlers': ['audit_file'],
            'level': 'INFO',
            'propagate': False,
        },
        '': {
            'handlers': ['console', 'file'],
            'level': 'WARNING',
        },
    }
}

WSGI_APPLICATION = 'unifi_auth_project.wsgi.application'




# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# UniFi Controller settings
UNIFI_CONTROLLER_CONFIG = {
    'IP': os.getenv('UNIFI_CONTROLLER_IP', '192.168.48.2'),
    'PORT': os.getenv('UNIFI_CONTROLLER_PORT', '8447'),
    'VERSION': os.getenv('UNIFI_CONTROLLER_VERSION', 'api'),
    'SITE_ID': os.getenv('UNIFI_SITE_ID', 'default'),
    'USERNAME': os.getenv('UNIFI_USERNAME', 'jueferson.souto'),
    'PASSWORD': os.getenv('UNIFI_PASSWORD', 'cmp@2023'),
}

# Debug Database Config
print('DB_NAME:', os.getenv('DB_NAME'))
print('DB_USER:', os.getenv('DB_USER'))

# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '3306'),
    }
}

# Configuração de Logs - Suprimir avisos desnecessários
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'handlers': {
        'console': {
            'level': 'WARNING',  # Apenas WARNING e acima
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'file': {
            'level': 'WARNING',  # Apenas WARNING e acima
            'class': 'logging.FileHandler',
            'filename': '/opt/auth_project/logs/django.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'WARNING',  # Apenas WARNING e acima
            'propagate': True,
        },
        'unifi_auth_app': {
            'handlers': ['console', 'file'],
            'level': 'WARNING',  # Apenas WARNING e acima
            'propagate': True,
        },
    },
}

# Configurações de Sessão e CSRF
# Garante que os cookies de sessão funcionem em HTTP e HTTPS
SESSION_COOKIE_SECURE = False  # Mude para True em produção com HTTPS
CSRF_COOKIE_SECURE = False     # Mude para True em produção com HTTPS
SESSION_COOKIE_HTTPONLY = True
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'  # Pode ser 'Lax' ou 'Strict'
CSRF_COOKIE_SAMESITE = 'Lax'     # Pode ser 'Lax' ou 'Strict'

# Configuração para evitar redirecionamentos desnecessários
LOGIN_REDIRECT_URL = '/admin/'
LOGOUT_REDIRECT_URL = '/login/'
LOGIN_URL = '/login/'

# Garante que o Django use o protocolo correto para gerar URLs
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# Configurações de SSL para o MySQL
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '3306'),
        'OPTIONS': {
            'ssl': {
                'ca': '/etc/ssl/certs/ca-certificates.crt',  # Caminho padrão para certificados no Ubuntu
            },
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'connect_timeout': 30,
        },
    }
}

# Suprimir avisos de SSL
import warnings
warnings.filterwarnings("ignore", category=RuntimeWarning, module='django.db.backends.mysql.base')

